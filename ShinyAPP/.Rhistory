for (item in list_var){
dat_usr_tweet <- dat_usr_tweet %>%
arrange_(.dots=c(paste0('desc(',item,')')))
dat_usr_tweet$top_ <- 1
df <- dat_usr_tweet[1:20,]
cube_twitter <- merge(cube_twitter,df[,c('user_id','top_')],
by.x='user_id',
by.y='user_id',
all.x=TRUE)
names(cube_twitter)[names(cube_twitter)=='top_'] <- paste0('top_',item)
}
remove(dat_usr_tweet,user_names)
gc()
cube_twitter <- merge(cube_twitter,
tweets[,c('tweet_id','screen_name')] %>%
distinct(tweet_id,.keep_all = TRUE),
by.x='tweet_id',
by.y='tweet_id',
all.x=TRUE)
#outputs ROW1 ----
# Time series ----
library(xts)
help("xts")
ts.cube_twitter <- xts(cube_twitter)
cube_twitter$created_at
ts.cube_twitter <- xts(cube_twitter,order.by = cube_twitter$created_at)
typeof(cube_twitter$created_at)
View(cube_twitter)
as.Date(cube_twitter$created_at)
as.POSIXct(cube_twitter$created_at,format="%m/%d/%y %H:%M:%S")
as.POSIXct(cube_twitter$created_at,format="%Y/%m/%d %H:%M:%S")
as.POSIXct(cube_twitter$created_at,format="%Y/%m/%d%H:%M:%S")
cube_twitter$created_at
as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S")
ts.cube_twitter <- xts(cube_twitter,
order.by = as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S"))
View(ts.cube_twitter)
duplicated(ts.cube_twitter$tweet_id)
ts.cube_twitter[duplicated(ts.cube_twitter$tweet_id),]
ts.cube_twitter<-ts.cube_twitter[!duplicated(ts.cube_twitter$tweet_id),]
View(ts.cube_twitter)
names(cube_twitter)
ts.cube_twitter <- xts(cube_twitter[,c('created_at','count_tweet',
'reweet_count','reply_count','favorite_count')],
order.by = as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d
ts.cube_twitter <- xts(cube_twitter[,c('created_at','count_tweet',
'reweet_count','reply_count','favorite_count')],
order.by = as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S"))
ts.cube_twitter <- xts(cube_twitter[,c('created_at','count_tweet',
'reweet_count','reply_count','favorite_count')],
order.by = as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S"))
View(ts.cube_twitter)
ts.cube_twitter<-ts.cube_twitter[!duplicated(ts.cube_twitter$tweet_id),]
ts.cube_twitter <- xts(cube_twitter[,c('created_at','count_tweet',
'reweet_count','reply_count','favorite_count')],
order.by = as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S"))
ts.cube_twitter <- xts(cube_twitter[,c('created_at','tweet_id','count_tweet',
'reweet_count','reply_count','favorite_count')],
order.by = as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S"))
ts.cube_twitter<-ts.cube_twitter[!duplicated(ts.cube_twitter$tweet_id),]
to.hourly(ts.cube_twitter)
to.period(ts.cube_twitter,period="quarters")
View(ts.cube_twitter)
ts.cube_twitter$tweet_id<-NULL
View(ts.cube_twitter)
to.hourly(ts.cube_twitter)
to.period(ts.cube_twitter,period="quarters")
ts.cube_twitter$created_at<-NULL
View(ts.cube_twitter)
to.hourly(ts.cube_twitter)
View(ts.cube_twitter)
ts.cube_twitter <- xts(cube_twitter[,c('created_at','tweet_id','count_tweet')],
order.by = as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S"))
ts.cube_twitter<-ts.cube_twitter[!duplicated(ts.cube_twitter$tweet_id),]
ts.cube_twitter$tweet_id<-NULL
ts.cube_twitter$created_at<-NULL
to.hourly(ts.cube_twitter)
View(ts.cube_twitter)
ts.cube_twitter <- xts(cube_twitter[,c('created_at','tweet_id','count_tweet')],
order.by = as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S"),indexAt = 'startof')
View(ts.cube_twitter)
ts.cube_twitter<-ts.cube_twitter[!duplicated(ts.cube_twitter$tweet_id),]
ts.cube_twitter$tweet_id<-NULL
ts.cube_twitter$created_at<-NULL
to.hourly(ts.cube_twitter)
to_period(x = ts.cube_twitter, period = "hours", indexAt = 'startof')
to_period(x = ts.cube_twitter, period = "hours")
ts.cube_twitter$count_tweet
as.numeric(ts.cube_twitter$count_tweet)
ts.cube_twitter$count_tweet<- as.numeric(ts.cube_twitter$count_tweet)
to_period(x = ts.cube_twitter, period = "hours")
View(ts.cube_twitter)
ts.cube_twitter$count_tweet<- as.numeric(ts.cube_twitter$count_tweet)
View(ts.cube_twitter)
cube_twitter$created_at<-as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S")
View(cube_twitter)
cube_twitter$created_at<-as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S")
cube_twitter$created_at
cube_twitter$created_at<-as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S")
ts.cube_twitter <- xts(cube_twitter[,c('created_at','count_tweet')],
order.by = cube_twitter$created_at)
ts.cube_twitter
cube_twitter$created_at<-as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S")
ts.cube_twitter <- xts(cube_twitter[,c('count_tweet')],
order.by = cube_twitter$created_at)
ts.cube_twitter
to_period(x = ts.cube_twitter, period = "hours")
plot(to_period(x = ts.cube_twitter, period = "hours"))
plot(to.period(x = ts.cube_twitter, period = "hours"))
help("to.hourly")
apply.monthly(ts.cube_twitter,FUN=sum)
apply.daily(ts.cube_twitter,FUN=sum)
period.apply(ts.cube_twitter, endpoints(ts.cube_twitter, "hours"), sum)
plot(period.apply(ts.cube_twitter, endpoints(ts.cube_twitter, "hours"), sum))
hourly<-(period.apply(ts.cube_twitter, endpoints(ts.cube_twitter, "hours"), sum))
ggplot(data=hourly,aes(count_tweet))+
geom_line(color = "#00AFBB", size = 2)
View(hourly)
names(hourly)
View(hourly)
ggplot(hourly)+
geom_line(color = "#00AFBB", size = 2)
as.data.frame(hourly)
as.data.frame(hourly)
hourly
sum(hourly)
data.frame(date=index(hourly), coredata(hourly))
data.frame(date=index(hourly), coredata(hourly))
data.frame(date=index(hourly), coredata(hourly))
data.frame(date=index(hourly), coredata(hourly))
data.frame(date=index(hourly), coredata(hourly))
data.frame(date=index(hourly), coredata(hourly))
hourly
index(hourly)
hourly
data.frame(date=index(hourly), hourly)
hourly[1]
data.frame(date=index(hourly), hourly[,1])
hourly[,1]
as.vector(hourly[,1])
data.frame(date=index(hourly), as.vector(hourly[,1]))
as.data.frame(date=index(hourly), as.vector(hourly[,1]))
as.data.frame(date=index(hourly), as.vector(hourly[,1]))
as.data.frame(date=index(hourly), values=as.vector(hourly[,1]))
as.data.frame(date=index(hourly), x=as.vector(hourly[,1]))
index(hourly)
ggplot(aes(x=index(hourly),y=as.vector(hourly)))+
geom_line(color = "#00AFBB", size = 2)
ind=index(hourly)
values=as.vector(hourly)
df<-data.frame(y=values,date=ind)
View(df)
ggplot(data = df,aes(x=ind,y=values))+
geom_line(color = "#00AFBB", size = 2)
ggplot(data = df,aes(x=ind,y=values))+
geom_line(color = "#00AFBB", size = 1.25)
ggplot(data = df,aes(x=ind,y=values))+
geom_line(color = "#00AFBB", size = 1.25)+
theme_bw()
ggplot(data = df,aes(x=ind,y=values))+
geom_line(color = "#00AFBB", size = 1.25)+
theme_bw()+theme(panel.border = element_blank(),
axis.line =  element_line(colour="gray70"),
axis.text.x = element_text(size = base_size * 1.25 ,
lineheight = 0.9,
colour = "black", vjust = 1),
axis.text.y = element_text(size = base_size * 1.25,
lineheight = 0.9,
colour = "black", hjust = 1),
axis.title.x = element_text(size = base_size * 1.5, angle = 0),
panel.grid.minor =  element_blank())
base_size = 12
cube_twitter$created_at<-as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S")
ts.cube_twitter <- xts(cube_twitter[,c('count_tweet')],
order.by = cube_twitter$created_at)
ts.cube_twitter$count_tweet<- as.numeric(ts.cube_twitter$count_tweet)
base_size = 12
cube_twitter$created_at<-as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S")
ts.cube_twitter <- xts(cube_twitter[,c('count_tweet')],
order.by = cube_twitter$created_at)
hourly<-(period.apply(ts.cube_twitter, endpoints(ts.cube_twitter, "hours"), sum))
ind=index(hourly)
values=as.vector(hourly)
df<-data.frame(y=values,date=ind)
ggplot(data = df,aes(x=ind,y=values))+
geom_line(color = "#00AFBB", size = 1.25)+
theme_bw()+theme(panel.border = element_blank(),
axis.line =  element_line(colour="gray70"),
axis.text.x = element_text(size = base_size * 1.25 ,
lineheight = 0.9,
colour = "black", vjust = 1),
axis.text.y = element_text(size = base_size * 1.25,
lineheight = 0.9,
colour = "black", hjust = 1),
axis.title.x = element_text(size = base_size * 1.5, angle = 0),
panel.grid.minor =  element_blank())
ggplot(data = df,aes(x=ind,y=values))+
geom_line(color = "#00AFBB", size = 1.25)+
ylab("Number of tweets")+
ggtitle("Number of tweets per hour")+
theme_bw()+theme(panel.border = element_blank(),
axis.line =  element_line(colour="gray70"),
axis.text.x = element_text(size = base_size * 1.25 ,
lineheight = 0.9,
colour = "black", vjust = 1),
axis.text.y = element_text(size = base_size * 1.25,
lineheight = 0.9,
colour = "black", hjust = 1),
axis.title.x = element_text(size = base_size * 1.5, angle = 0),
panel.grid.minor =  element_blank())
library(scales)
ggplot(data = hourly_tweets,aes(x=date,y=y))+
geom_line(color = "#00AFBB", size = 1.25)+
ylab("Number of tweets")+
ggtitle("Number of tweets per hour")+
scale_x_date(breaks=date_breaks("8 hours"))+
theme_bw()+theme(panel.border = element_blank(),
axis.line =  element_line(colour="gray70"),
axis.text.x = element_text(size = base_size * 1.25 ,
lineheight = 0.9,
colour = "black", vjust = 1),
axis.text.y = element_text(size = base_size * 1.25,
lineheight = 0.9,
colour = "black", hjust = 1),
axis.title.x = element_text(size = base_size * 1.5,
angle = 0),
panel.grid.minor =  element_blank())
rt_s
names(rt_s)
rt_s$created_at<- as.POSIXct(rt_s$created_at,format="%Y-%m-%d %H:%M:%S")
rt_s$created_at<- as.POSIXct(rt_s$created_at,format="%Y-%m-%d %H:%M:%S")
ts.retweets <- xts(rt_s[,c('reweet_count','favorite_count','reply_count')],
order.by = rt_s$created_at)
hourly_rts<-(period.apply(ts.retweets, endpoints(ts.retweets, "hours"), sum))
hourly_rts
help(period.apply)
View(rt_s)
hola <- xts(rt_s[,c('retweet_count')],order.by = rt_s$created_at)
View(rt_s)
View(rt_s)
hola <- xts(rt_s[,c('reweet_count')],order.by = rt_s$created_at)
hola
to.hourly(hola)
hola<-to.hourly(hola)
hola$hola.Close
hola<-to.hourly(hola)[,4]
hola
plot(hola)
as.vector(hola)
library(forecast)
ma(hola,order = 3)
View(ts.retweets)
hola<-ts.retweets$reweet_count
plot(period.apply(hola,endpoints(hola,"hours"),mean))
hola <- convert_hourly(text="retweet_count")
convert_hourly <- function(text){
if (text=="count_tweet"){
data_<-cube_twitter
ts.data <- xts(data_[,c(text)],
order.by = data_$created_at)
hourly_<-(period.apply(ts.data, endpoints(ts.data, "hours"), sum))
}
else{
data_<-rt_s
ts.data <- xts(data_[,c(text)],
order.by = data_$created_at)
hourly_<-period.apply(ts.data,endpoints(ts.data,"hours"),mean)
}
ind=index(hourly_)
values=as.vector(hourly_)
hourly_<-data.frame(y=values,date=ind)
remove(ts.data,ind,values,data_)
return(hourly_)
}
hola <- convert_hourly(text="retweet_count")
hola <- convert_hourly(text="reweet_count")
View(hola)
library(zoo)
help(rollmean)
rollmean(hola,k=3,fill = 0)
rollmean(hola,k=3)
hola
zoo(hola$y,hola$date)
rollmean(zoo(hola$y,hola$date),k=3)
plot(rollmean(zoo(hola$y,hola$date),k=3))
plot(rollmean(zoo(hola$y,hola$date),k=4))
plot(rollmean(zoo(hola$y,hola$date),k=8))
plot(rollmean(zoo(hola$y,hola$date),k=2))
plot(rollmean(zoo(hola$y,hola$date),k=4))
como_asi<-rollmean(zoo(hola$y,hola$date),k=4)
index(como_asi)
as.vector(como_asi)
library(dplyr)
library(ggplot2)
library(xts)
library(scales)
library(zoo)
library(ggvis)
library(dplyr)
library(ggplot2)
library(xts)
library(scales)
library(zoo)
library(ggvis)
options(scipen=999)
my_wd<-'/home/juan/Desktop/Data_Visualization/Project'
setwd(my_wd)
#read the data ----
tweets<-read.csv('tweets_cluster.csv',header = TRUE,sep=',')
rt_s<-read.csv('db_RT.csv')
#counting cube ----
id_tweet<- cbind(tweets[,c('created_at','tweet_id','user_id')],1)
names(id_tweet)<-c('created_at','tweet_id','user_id','count_tweet')
id_tweet<-id_tweet[complete.cases(id_tweet),]
id_rt_rep<-rt_s[,c('created_at','tweet_id',
'reweet_count','reply_count','favorite_count')]
#select the last observation in the retweet table
id_rt_rep <- id_rt_rep %>%
arrange(desc(tweet_id,created_at)) %>%
distinct(tweet_id,.keep_all = TRUE)
id_rt_rep <- id_rt_rep[,c('tweet_id','reweet_count',
'reply_count','favorite_count')]
#merge with tweets table
cube_twitter <- merge(id_tweet,id_rt_rep,
by.x='tweet_id',
by.y='tweet_id',
all.x=TRUE)
cube_twitter$all<-cube_twitter$count_tweet+cube_twitter$reweet_count+
cube_twitter$reply_count+cube_twitter$favorite_count
remove(id_rt_rep,id_tweet)
dat_usr_tweet <- aggregate(. ~ user_id, cube_twitter, sum)
user_names <- unique(tweets[,c('user_id','screen_name')])
user_names<- user_names[complete.cases(user_names) &
duplicated(user_names$user_id)==FALSE,]
dat_usr_tweet <- merge(dat_usr_tweet,user_names,
by.x='user_id',
by.y='user_id',
all.x=TRUE)
list_var=c("count_tweet","reweet_count","reply_count","favorite_count","all")
for (item in list_var){
dat_usr_tweet <- dat_usr_tweet %>%
arrange_(.dots=c(paste0('desc(',item,')')))
dat_usr_tweet$top_ <- 1
df <- dat_usr_tweet[1:20,]
cube_twitter <- merge(cube_twitter,df[,c('user_id','top_')],
by.x='user_id',
by.y='user_id',
all.x=TRUE)
names(cube_twitter)[names(cube_twitter)=='top_'] <- paste0('top_',item)
}
remove(user_names,df)
gc()
cube_twitter <- merge(cube_twitter,
tweets[,c('tweet_id','screen_name')] %>%
distinct(tweet_id,.keep_all = TRUE),
by.x='tweet_id',
by.y='tweet_id',
all.x=TRUE)
View(dat_usr_tweet)
help(ggvis)
library(shiny)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(xts)
library(scales)
library(zoo)
library(DT)
library(tm)
library(SnowballC)
library(wordcloud)
library(RWeka)
library(NLP)
my_wd<-'/home/juan/Desktop/Data_Visualization/Project/Project_Juan_Garcia/data'
setwd(my_wd)
my_wd<-'/home/juan/Desktop/Data_Visualization/Project/Project_Juan_Garcia/data'
library(DT)
library(dplyr)
library(ggplot2)
library(xts)
library(scales)
library(zoo)
library(DT)
library(tm)
library(SnowballC)
library(wordcloud)
library(RWeka)
library(NLP)
options(scipen=999)
setwd(my_wd)
setwd(my_wd)
tweets<-read.csv('tweets_cluster.csv',header = TRUE,sep=',')
rt_s<-read.csv('db_RT.csv')
users_data <- read.csv('user_clusters.csv')
View(tweets)
View(rt_s)
View(tweets)
View(users_data)
View(tweets)
length(unique(tweets$user_id))
#read the data ----
tweets<-read.csv('tweets_cluster.csv',header = TRUE,sep=',')
rt_s<-read.csv('db_RT.csv')
users_data <- read.csv('user_clusters.csv')
#counting cube ----
id_tweet<- cbind(tweets[,c('created_at','tweet_id','user_id')],1)
names(id_tweet)<-c('created_at','tweet_id','user_id','count_tweet')
id_tweet<-id_tweet[complete.cases(id_tweet),]
id_rt_rep<-rt_s[,c('created_at','tweet_id',
'reweet_count','reply_count','favorite_count')]
length(unique(tweets$user_id))
#select the last observation in the retweet table
id_rt_rep <- id_rt_rep %>%
arrange(desc(tweet_id,created_at)) %>%
distinct(tweet_id,.keep_all = TRUE)
id_rt_rep <- id_rt_rep[,c('tweet_id','reweet_count',
'reply_count','favorite_count')]
#merge with tweets table
cube_twitter <- merge(id_tweet,id_rt_rep,
by.x='tweet_id',
by.y='tweet_id',
all.x=TRUE)
cube_twitter$all<-cube_twitter$count_tweet+cube_twitter$reweet_count+
cube_twitter$reply_count+cube_twitter$favorite_count
remove(id_rt_rep,id_tweet)
dat_usr_tweet <- aggregate(. ~ user_id, cube_twitter, sum)
user_names <- unique(tweets[,c('user_id','screen_name')])
user_names<- user_names[complete.cases(user_names) &
duplicated(user_names$user_id)==FALSE,]
dat_usr_tweet <- merge(dat_usr_tweet,user_names,
by.x='user_id',
by.y='user_id',
all.x=TRUE)
list_var=c("count_tweet","reweet_count","reply_count","favorite_count","all")
for (item in list_var){
dat_usr_tweet <- dat_usr_tweet %>%
arrange_(.dots=c(paste0('desc(',item,')')))
dat_usr_tweet$top_ <- 1
df <- dat_usr_tweet[1:20,]
cube_twitter <- merge(cube_twitter,df[,c('user_id','top_')],
by.x='user_id',
by.y='user_id',
all.x=TRUE)
names(cube_twitter)[names(cube_twitter)=='top_'] <- paste0('top_',item)
}
remove(user_names,df)
gc()
cube_twitter <- merge(cube_twitter,
tweets[,c('tweet_id','screen_name')] %>%
distinct(tweet_id,.keep_all = TRUE),
by.x='tweet_id',
by.y='tweet_id',
all.x=TRUE)
#time series processing ----
cube_twitter$created_at<-as.POSIXct(cube_twitter$created_at,format="%Y-%m-%d %H:%M:%S")
rt_s$created_at<- as.POSIXct(rt_s$created_at,format="%Y-%m-%d %H:%M:%S")
convert_hourly <- function(text){
if (text=="count_tweet"){
data_<-cube_twitter
ts.data <- xts(data_[,c(text)],
order.by = data_$created_at)
hourly_<-(period.apply(ts.data, endpoints(ts.data, "hours"), sum))
}
else{
data_<-rt_s
ts.data <- xts(data_[,c(text)],
order.by = data_$created_at)
hourly_<-period.apply(ts.data,endpoints(ts.data,"hours"),mean)
}
ind=index(hourly_)
values=as.vector(hourly_)
hourly_<-data.frame(y=values,date=ind)
remove(ts.data,ind,values,data_)
return(hourly_)
}
MA_zoo<-function(ts,k_){
como_asi<-rollmean(zoo(ts$y,ts$date),k=k_)
roll_mean<- data.frame(date=index(como_asi),y=as.vector(como_asi))
return(roll_mean)
}
df <- cube_twitter[,c('tweet_id','screen_name',paste0('top_',input$activity_tweet))]
df<-df[complete.cases(df),]
View(cube_twitter)
df <- cube_twitter[,c('tweet_id','screen_name',paste0('top_','count_tweet'))]
df<-df[complete.cases(df),]
dim(df)
354/2167
rm( list=ls() )
library(shiny)
my_wd<-'/home/juan/Desktop/Data_Visualization/Project/Project_Juan_Garcia'
setwd(my_wd)
runApp()
library(shiny)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(xts)
library(scales)
library(zoo)
library(DT)
library(tm)
library(SnowballC)
library(wordcloud)
library(RWeka)
library(NLP)
library(shiny)
shiny::runApp(appDir = '/home/juan/Desktop/Data_Visualization/Project/Project_Juan_Garcia',port = 3838)
shiny::runApp(appDir = '/home/juan/Desktop/Data_Visualization/Project/Project_Juan_Garcia',port = 3838)
help(shiny::runApp)
help(runApp)
shiny::runApp(appDir = '/home/juan/Desktop/Data_Visualization/Project/Project_Juan_Garcia',
port = 3838)
